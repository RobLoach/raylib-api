
Defines found: 13

Define 001: RAYGUI_H
  Name: RAYGUI_H
  Type: GUARD
  Value: 
  Description: 
Define 002: RAYGUI_VERSION_MAJOR
  Name: RAYGUI_VERSION_MAJOR
  Type: INT
  Value: 4
  Description: 
Define 003: RAYGUI_VERSION_MINOR
  Name: RAYGUI_VERSION_MINOR
  Type: INT
  Value: 0
  Description: 
Define 004: RAYGUI_VERSION_PATCH
  Name: RAYGUI_VERSION_PATCH
  Type: INT
  Value: 0
  Description: 
Define 005: RAYGUI_VERSION
  Name: RAYGUI_VERSION
  Type: STRING
  Value: "4.0"
  Description: 
Define 006: RAYGUIAPI
  Name: RAYGUIAPI
  Type: UNKNOWN
  Value: __declspec(dllexport)
  Description: We are building the library as a Win32 shared library (.dll)
Define 007: RAYGUI_MALLOC(sz)
  Name: RAYGUI_MALLOC(sz)
  Type: MACRO
  Value: malloc(sz)
  Description: 
Define 008: RAYGUI_CALLOC(n,sz)
  Name: RAYGUI_CALLOC(n,sz)
  Type: MACRO
  Value: calloc(n,sz)
  Description: 
Define 009: RAYGUI_FREE(p)
  Name: RAYGUI_FREE(p)
  Type: MACRO
  Value: free(p)
  Description: 
Define 010: RAYGUI_SUPPORT_LOG_INFO
  Name: RAYGUI_SUPPORT_LOG_INFO
  Type: GUARD
  Value: 
  Description: 
Define 011: RAYGUI_LOG(...)
  Name: RAYGUI_LOG(...)
  Type: MACRO
  Value: printf(__VA_ARGS__)
  Description: 
Define 012: SCROLLBAR_LEFT_SIDE
  Name: SCROLLBAR_LEFT_SIDE
  Type: INT
  Value: 0
  Description: 
Define 013: SCROLLBAR_RIGHT_SIDE
  Name: SCROLLBAR_RIGHT_SIDE
  Type: INT
  Value: 1
  Description: 

Structures found: 10

Struct 01: Vector2 (2 fields)
  Name: Vector2
  Description: Vector2 type
  Field[1]: float x 
  Field[2]: float y 
Struct 02: Vector3 (3 fields)
  Name: Vector3
  Description: Vector3 type                 // -- ConvertHSVtoRGB(), ConvertRGBtoHSV()
  Field[1]: float x 
  Field[2]: float y 
  Field[3]: float z 
Struct 03: Color (4 fields)
  Name: Color
  Description: Color type, RGBA (32bit)
  Field[1]: unsigned char r 
  Field[2]: unsigned char g 
  Field[3]: unsigned char b 
  Field[4]: unsigned char a 
Struct 04: Rectangle (4 fields)
  Name: Rectangle
  Description: Rectangle type
  Field[1]: float x 
  Field[2]: float y 
  Field[3]: float width 
  Field[4]: float height 
Struct 05: Texture2D (5 fields)
  Name: Texture2D
  Description: It should be redesigned to be provided by user
  Field[1]: unsigned int id // OpenGL texture id
  Field[2]: int width // Texture base width
  Field[3]: int height // Texture base height
  Field[4]: int mipmaps // Mipmap levels, 1 by default
  Field[5]: int format // Data format (PixelFormat type)
Struct 06: Image (5 fields)
  Name: Image
  Description: Image, pixel data stored in CPU memory (RAM)
  Field[1]: void * data // Image raw data
  Field[2]: int width // Image base width
  Field[3]: int height // Image base height
  Field[4]: int mipmaps // Mipmap levels, 1 by default
  Field[5]: int format // Data format (PixelFormat type)
Struct 07: GlyphInfo (5 fields)
  Name: GlyphInfo
  Description: GlyphInfo, font characters glyphs info
  Field[1]: int value // Character value (Unicode)
  Field[2]: int offsetX // Character offset X when drawing
  Field[3]: int offsetY // Character offset Y when drawing
  Field[4]: int advanceX // Character advance position X
  Field[5]: Image image // Character image data
Struct 08: Font (6 fields)
  Name: Font
  Description: It should be redesigned to be provided by user
  Field[1]: int baseSize // Base size (default chars height)
  Field[2]: int glyphCount // Number of glyph characters
  Field[3]: int glyphPadding // Padding around the glyph characters
  Field[4]: Texture2D texture // Texture atlas containing the glyphs
  Field[5]: Rectangle * recs // Rectangles in texture for the glyphs
  Field[6]: GlyphInfo * glyphs // Glyphs info data
Struct 09: GuiStyleProp (3 fields)
  Name: GuiStyleProp
  Description: NOTE: Used when exporting style as code for convenience
  Field[1]: unsigned short controlId // Control identifier
  Field[2]: unsigned short propertyId // Property identifier
  Field[3]: int propertyValue // Property value
Struct 10: GuiTextStyle (6 fields)
  Name: GuiTextStyle
  Description: NOTE: Text style is defined by control
  Field[1]: unsigned int size 
  Field[2]: int charSpacing 
  Field[3]: int lineSpacing 
  Field[4]: int alignmentH 
  Field[5]: int alignmentV 
  Field[6]: int padding 

Aliases found: 0


Enums found: 19

Enum 01: GuiState (4 values)
  Name: GuiState
  Description: Gui control state
  Value[STATE_NORMAL]: 0
  Value[STATE_FOCUSED]: 1
  Value[STATE_PRESSED]: 2
  Value[STATE_DISABLED]: 3
Enum 02: GuiTextAlignment (3 values)
  Name: GuiTextAlignment
  Description: Gui control text alignment
  Value[TEXT_ALIGN_LEFT]: 0
  Value[TEXT_ALIGN_CENTER]: 1
  Value[TEXT_ALIGN_RIGHT]: 2
Enum 03: GuiTextAlignmentVertical (3 values)
  Name: GuiTextAlignmentVertical
  Description: Gui control text alignment vertical
  Value[TEXT_ALIGN_TOP]: 0
  Value[TEXT_ALIGN_MIDDLE]: 1
  Value[TEXT_ALIGN_BOTTOM]: 2
Enum 04: GuiTextWrapMode (3 values)
  Name: GuiTextWrapMode
  Description: Gui control text wrap mode
  Value[TEXT_WRAP_NONE]: 0
  Value[TEXT_WRAP_CHAR]: 1
  Value[TEXT_WRAP_WORD]: 2
Enum 05: GuiControl (16 values)
  Name: GuiControl
  Description: Gui controls
  Value[DEFAULT]: 0
  Value[LABEL]: 1
  Value[BUTTON]: 2
  Value[TOGGLE]: 3
  Value[SLIDER]: 4
  Value[PROGRESSBAR]: 5
  Value[CHECKBOX]: 6
  Value[COMBOBOX]: 7
  Value[DROPDOWNBOX]: 8
  Value[TEXTBOX]: 9
  Value[VALUEBOX]: 10
  Value[SPINNER]: 11
  Value[LISTVIEW]: 12
  Value[COLORPICKER]: 13
  Value[SCROLLBAR]: 14
  Value[STATUSBAR]: 15
Enum 06: GuiControlProperty (15 values)
  Name: GuiControlProperty
  Description: Gui base properties for every control
  Value[BORDER_COLOR_NORMAL]: 0
  Value[BASE_COLOR_NORMAL]: 1
  Value[TEXT_COLOR_NORMAL]: 2
  Value[BORDER_COLOR_FOCUSED]: 3
  Value[BASE_COLOR_FOCUSED]: 4
  Value[TEXT_COLOR_FOCUSED]: 5
  Value[BORDER_COLOR_PRESSED]: 6
  Value[BASE_COLOR_PRESSED]: 7
  Value[TEXT_COLOR_PRESSED]: 8
  Value[BORDER_COLOR_DISABLED]: 9
  Value[BASE_COLOR_DISABLED]: 10
  Value[TEXT_COLOR_DISABLED]: 11
  Value[BORDER_WIDTH]: 12
  Value[TEXT_PADDING]: 13
  Value[TEXT_ALIGNMENT]: 14
Enum 07: GuiDefaultProperty (7 values)
  Name: GuiDefaultProperty
  Description: DEFAULT extended properties
  Value[TEXT_SIZE]: 16
  Value[TEXT_SPACING]: 17
  Value[LINE_COLOR]: 18
  Value[BACKGROUND_COLOR]: 19
  Value[TEXT_LINE_SPACING]: 20
  Value[TEXT_ALIGNMENT_VERTICAL]: 21
  Value[TEXT_WRAP_MODE]: 22
Enum 08: GuiToggleProperty (1 values)
  Name: GuiToggleProperty
  Description: Toggle/ToggleGroup
  Value[GROUP_PADDING]: 16
Enum 09: GuiSliderProperty (2 values)
  Name: GuiSliderProperty
  Description: Slider/SliderBar
  Value[SLIDER_WIDTH]: 16
  Value[SLIDER_PADDING]: 17
Enum 10: GuiProgressBarProperty (1 values)
  Name: GuiProgressBarProperty
  Description: ProgressBar
  Value[PROGRESS_PADDING]: 16
Enum 11: GuiScrollBarProperty (6 values)
  Name: GuiScrollBarProperty
  Description: ScrollBar
  Value[ARROWS_SIZE]: 16
  Value[ARROWS_VISIBLE]: 17
  Value[SCROLL_SLIDER_PADDING]: 18
  Value[SCROLL_SLIDER_SIZE]: 19
  Value[SCROLL_PADDING]: 20
  Value[SCROLL_SPEED]: 21
Enum 12: GuiCheckBoxProperty (1 values)
  Name: GuiCheckBoxProperty
  Description: CheckBox
  Value[CHECK_PADDING]: 16
Enum 13: GuiComboBoxProperty (2 values)
  Name: GuiComboBoxProperty
  Description: ComboBox
  Value[COMBO_BUTTON_WIDTH]: 16
  Value[COMBO_BUTTON_SPACING]: 17
Enum 14: GuiDropdownBoxProperty (2 values)
  Name: GuiDropdownBoxProperty
  Description: DropdownBox
  Value[ARROW_PADDING]: 16
  Value[DROPDOWN_ITEMS_SPACING]: 17
Enum 15: GuiTextBoxProperty (1 values)
  Name: GuiTextBoxProperty
  Description: TextBox/TextBoxMulti/ValueBox/Spinner
  Value[TEXT_READONLY]: 16
Enum 16: GuiSpinnerProperty (2 values)
  Name: GuiSpinnerProperty
  Description: Spinner
  Value[SPIN_BUTTON_WIDTH]: 16
  Value[SPIN_BUTTON_SPACING]: 17
Enum 17: GuiListViewProperty (4 values)
  Name: GuiListViewProperty
  Description: ListView
  Value[LIST_ITEMS_HEIGHT]: 16
  Value[LIST_ITEMS_SPACING]: 17
  Value[SCROLLBAR_WIDTH]: 18
  Value[SCROLLBAR_SIDE]: 19
Enum 18: GuiColorPickerProperty (5 values)
  Name: GuiColorPickerProperty
  Description: ColorPicker
  Value[COLOR_SELECTOR_SIZE]: 16
  Value[HUEBAR_WIDTH]: 17
  Value[HUEBAR_PADDING]: 18
  Value[HUEBAR_SELECTOR_HEIGHT]: 19
  Value[HUEBAR_SELECTOR_OVERFLOW]: 20
Enum 19: GuiIconName (256 values)
  Name: GuiIconName
  Description: 
  Value[ICON_NONE]: 0
  Value[ICON_FOLDER_FILE_OPEN]: 1
  Value[ICON_FILE_SAVE_CLASSIC]: 2
  Value[ICON_FOLDER_OPEN]: 3
  Value[ICON_FOLDER_SAVE]: 4
  Value[ICON_FILE_OPEN]: 5
  Value[ICON_FILE_SAVE]: 6
  Value[ICON_FILE_EXPORT]: 7
  Value[ICON_FILE_ADD]: 8
  Value[ICON_FILE_DELETE]: 9
  Value[ICON_FILETYPE_TEXT]: 10
  Value[ICON_FILETYPE_AUDIO]: 11
  Value[ICON_FILETYPE_IMAGE]: 12
  Value[ICON_FILETYPE_PLAY]: 13
  Value[ICON_FILETYPE_VIDEO]: 14
  Value[ICON_FILETYPE_INFO]: 15
  Value[ICON_FILE_COPY]: 16
  Value[ICON_FILE_CUT]: 17
  Value[ICON_FILE_PASTE]: 18
  Value[ICON_CURSOR_HAND]: 19
  Value[ICON_CURSOR_POINTER]: 20
  Value[ICON_CURSOR_CLASSIC]: 21
  Value[ICON_PENCIL]: 22
  Value[ICON_PENCIL_BIG]: 23
  Value[ICON_BRUSH_CLASSIC]: 24
  Value[ICON_BRUSH_PAINTER]: 25
  Value[ICON_WATER_DROP]: 26
  Value[ICON_COLOR_PICKER]: 27
  Value[ICON_RUBBER]: 28
  Value[ICON_COLOR_BUCKET]: 29
  Value[ICON_TEXT_T]: 30
  Value[ICON_TEXT_A]: 31
  Value[ICON_SCALE]: 32
  Value[ICON_RESIZE]: 33
  Value[ICON_FILTER_POINT]: 34
  Value[ICON_FILTER_BILINEAR]: 35
  Value[ICON_CROP]: 36
  Value[ICON_CROP_ALPHA]: 37
  Value[ICON_SQUARE_TOGGLE]: 38
  Value[ICON_SYMMETRY]: 39
  Value[ICON_SYMMETRY_HORIZONTAL]: 40
  Value[ICON_SYMMETRY_VERTICAL]: 41
  Value[ICON_LENS]: 42
  Value[ICON_LENS_BIG]: 43
  Value[ICON_EYE_ON]: 44
  Value[ICON_EYE_OFF]: 45
  Value[ICON_FILTER_TOP]: 46
  Value[ICON_FILTER]: 47
  Value[ICON_TARGET_POINT]: 48
  Value[ICON_TARGET_SMALL]: 49
  Value[ICON_TARGET_BIG]: 50
  Value[ICON_TARGET_MOVE]: 51
  Value[ICON_CURSOR_MOVE]: 52
  Value[ICON_CURSOR_SCALE]: 53
  Value[ICON_CURSOR_SCALE_RIGHT]: 54
  Value[ICON_CURSOR_SCALE_LEFT]: 55
  Value[ICON_UNDO]: 56
  Value[ICON_REDO]: 57
  Value[ICON_REREDO]: 58
  Value[ICON_MUTATE]: 59
  Value[ICON_ROTATE]: 60
  Value[ICON_REPEAT]: 61
  Value[ICON_SHUFFLE]: 62
  Value[ICON_EMPTYBOX]: 63
  Value[ICON_TARGET]: 64
  Value[ICON_TARGET_SMALL_FILL]: 65
  Value[ICON_TARGET_BIG_FILL]: 66
  Value[ICON_TARGET_MOVE_FILL]: 67
  Value[ICON_CURSOR_MOVE_FILL]: 68
  Value[ICON_CURSOR_SCALE_FILL]: 69
  Value[ICON_CURSOR_SCALE_RIGHT_FILL]: 70
  Value[ICON_CURSOR_SCALE_LEFT_FILL]: 71
  Value[ICON_UNDO_FILL]: 72
  Value[ICON_REDO_FILL]: 73
  Value[ICON_REREDO_FILL]: 74
  Value[ICON_MUTATE_FILL]: 75
  Value[ICON_ROTATE_FILL]: 76
  Value[ICON_REPEAT_FILL]: 77
  Value[ICON_SHUFFLE_FILL]: 78
  Value[ICON_EMPTYBOX_SMALL]: 79
  Value[ICON_BOX]: 80
  Value[ICON_BOX_TOP]: 81
  Value[ICON_BOX_TOP_RIGHT]: 82
  Value[ICON_BOX_RIGHT]: 83
  Value[ICON_BOX_BOTTOM_RIGHT]: 84
  Value[ICON_BOX_BOTTOM]: 85
  Value[ICON_BOX_BOTTOM_LEFT]: 86
  Value[ICON_BOX_LEFT]: 87
  Value[ICON_BOX_TOP_LEFT]: 88
  Value[ICON_BOX_CENTER]: 89
  Value[ICON_BOX_CIRCLE_MASK]: 90
  Value[ICON_POT]: 91
  Value[ICON_ALPHA_MULTIPLY]: 92
  Value[ICON_ALPHA_CLEAR]: 93
  Value[ICON_DITHERING]: 94
  Value[ICON_MIPMAPS]: 95
  Value[ICON_BOX_GRID]: 96
  Value[ICON_GRID]: 97
  Value[ICON_BOX_CORNERS_SMALL]: 98
  Value[ICON_BOX_CORNERS_BIG]: 99
  Value[ICON_FOUR_BOXES]: 100
  Value[ICON_GRID_FILL]: 101
  Value[ICON_BOX_MULTISIZE]: 102
  Value[ICON_ZOOM_SMALL]: 103
  Value[ICON_ZOOM_MEDIUM]: 104
  Value[ICON_ZOOM_BIG]: 105
  Value[ICON_ZOOM_ALL]: 106
  Value[ICON_ZOOM_CENTER]: 107
  Value[ICON_BOX_DOTS_SMALL]: 108
  Value[ICON_BOX_DOTS_BIG]: 109
  Value[ICON_BOX_CONCENTRIC]: 110
  Value[ICON_BOX_GRID_BIG]: 111
  Value[ICON_OK_TICK]: 112
  Value[ICON_CROSS]: 113
  Value[ICON_ARROW_LEFT]: 114
  Value[ICON_ARROW_RIGHT]: 115
  Value[ICON_ARROW_DOWN]: 116
  Value[ICON_ARROW_UP]: 117
  Value[ICON_ARROW_LEFT_FILL]: 118
  Value[ICON_ARROW_RIGHT_FILL]: 119
  Value[ICON_ARROW_DOWN_FILL]: 120
  Value[ICON_ARROW_UP_FILL]: 121
  Value[ICON_AUDIO]: 122
  Value[ICON_FX]: 123
  Value[ICON_WAVE]: 124
  Value[ICON_WAVE_SINUS]: 125
  Value[ICON_WAVE_SQUARE]: 126
  Value[ICON_WAVE_TRIANGULAR]: 127
  Value[ICON_CROSS_SMALL]: 128
  Value[ICON_PLAYER_PREVIOUS]: 129
  Value[ICON_PLAYER_PLAY_BACK]: 130
  Value[ICON_PLAYER_PLAY]: 131
  Value[ICON_PLAYER_PAUSE]: 132
  Value[ICON_PLAYER_STOP]: 133
  Value[ICON_PLAYER_NEXT]: 134
  Value[ICON_PLAYER_RECORD]: 135
  Value[ICON_MAGNET]: 136
  Value[ICON_LOCK_CLOSE]: 137
  Value[ICON_LOCK_OPEN]: 138
  Value[ICON_CLOCK]: 139
  Value[ICON_TOOLS]: 140
  Value[ICON_GEAR]: 141
  Value[ICON_GEAR_BIG]: 142
  Value[ICON_BIN]: 143
  Value[ICON_HAND_POINTER]: 144
  Value[ICON_LASER]: 145
  Value[ICON_COIN]: 146
  Value[ICON_EXPLOSION]: 147
  Value[ICON_1UP]: 148
  Value[ICON_PLAYER]: 149
  Value[ICON_PLAYER_JUMP]: 150
  Value[ICON_KEY]: 151
  Value[ICON_DEMON]: 152
  Value[ICON_TEXT_POPUP]: 153
  Value[ICON_GEAR_EX]: 154
  Value[ICON_CRACK]: 155
  Value[ICON_CRACK_POINTS]: 156
  Value[ICON_STAR]: 157
  Value[ICON_DOOR]: 158
  Value[ICON_EXIT]: 159
  Value[ICON_MODE_2D]: 160
  Value[ICON_MODE_3D]: 161
  Value[ICON_CUBE]: 162
  Value[ICON_CUBE_FACE_TOP]: 163
  Value[ICON_CUBE_FACE_LEFT]: 164
  Value[ICON_CUBE_FACE_FRONT]: 165
  Value[ICON_CUBE_FACE_BOTTOM]: 166
  Value[ICON_CUBE_FACE_RIGHT]: 167
  Value[ICON_CUBE_FACE_BACK]: 168
  Value[ICON_CAMERA]: 169
  Value[ICON_SPECIAL]: 170
  Value[ICON_LINK_NET]: 171
  Value[ICON_LINK_BOXES]: 172
  Value[ICON_LINK_MULTI]: 173
  Value[ICON_LINK]: 174
  Value[ICON_LINK_BROKE]: 175
  Value[ICON_TEXT_NOTES]: 176
  Value[ICON_NOTEBOOK]: 177
  Value[ICON_SUITCASE]: 178
  Value[ICON_SUITCASE_ZIP]: 179
  Value[ICON_MAILBOX]: 180
  Value[ICON_MONITOR]: 181
  Value[ICON_PRINTER]: 182
  Value[ICON_PHOTO_CAMERA]: 183
  Value[ICON_PHOTO_CAMERA_FLASH]: 184
  Value[ICON_HOUSE]: 185
  Value[ICON_HEART]: 186
  Value[ICON_CORNER]: 187
  Value[ICON_VERTICAL_BARS]: 188
  Value[ICON_VERTICAL_BARS_FILL]: 189
  Value[ICON_LIFE_BARS]: 190
  Value[ICON_INFO]: 191
  Value[ICON_CROSSLINE]: 192
  Value[ICON_HELP]: 193
  Value[ICON_FILETYPE_ALPHA]: 194
  Value[ICON_FILETYPE_HOME]: 195
  Value[ICON_LAYERS_VISIBLE]: 196
  Value[ICON_LAYERS]: 197
  Value[ICON_WINDOW]: 198
  Value[ICON_HIDPI]: 199
  Value[ICON_FILETYPE_BINARY]: 200
  Value[ICON_HEX]: 201
  Value[ICON_SHIELD]: 202
  Value[ICON_FILE_NEW]: 203
  Value[ICON_FOLDER_ADD]: 204
  Value[ICON_ALARM]: 205
  Value[ICON_CPU]: 206
  Value[ICON_ROM]: 207
  Value[ICON_STEP_OVER]: 208
  Value[ICON_STEP_INTO]: 209
  Value[ICON_STEP_OUT]: 210
  Value[ICON_RESTART]: 211
  Value[ICON_BREAKPOINT_ON]: 212
  Value[ICON_BREAKPOINT_OFF]: 213
  Value[ICON_BURGER_MENU]: 214
  Value[ICON_CASE_SENSITIVE]: 215
  Value[ICON_REG_EXP]: 216
  Value[ICON_FOLDER]: 217
  Value[ICON_FILE]: 218
  Value[ICON_SAND_TIMER]: 219
  Value[ICON_220]: 220
  Value[ICON_221]: 221
  Value[ICON_222]: 222
  Value[ICON_223]: 223
  Value[ICON_224]: 224
  Value[ICON_225]: 225
  Value[ICON_226]: 226
  Value[ICON_227]: 227
  Value[ICON_228]: 228
  Value[ICON_229]: 229
  Value[ICON_230]: 230
  Value[ICON_231]: 231
  Value[ICON_232]: 232
  Value[ICON_233]: 233
  Value[ICON_234]: 234
  Value[ICON_235]: 235
  Value[ICON_236]: 236
  Value[ICON_237]: 237
  Value[ICON_238]: 238
  Value[ICON_239]: 239
  Value[ICON_240]: 240
  Value[ICON_241]: 241
  Value[ICON_242]: 242
  Value[ICON_243]: 243
  Value[ICON_244]: 244
  Value[ICON_245]: 245
  Value[ICON_246]: 246
  Value[ICON_247]: 247
  Value[ICON_248]: 248
  Value[ICON_249]: 249
  Value[ICON_250]: 250
  Value[ICON_251]: 251
  Value[ICON_252]: 252
  Value[ICON_253]: 253
  Value[ICON_254]: 254
  Value[ICON_255]: 255

Callbacks found: 0


Functions found: 56

Function 001: GuiEnable() (0 input parameters)
  Name: GuiEnable
  Return type: void
  Description: Enable gui controls (global state)
  No input parameters
Function 002: GuiDisable() (0 input parameters)
  Name: GuiDisable
  Return type: void
  Description: Disable gui controls (global state)
  No input parameters
Function 003: GuiLock() (0 input parameters)
  Name: GuiLock
  Return type: void
  Description: Lock gui controls (global state)
  No input parameters
Function 004: GuiUnlock() (0 input parameters)
  Name: GuiUnlock
  Return type: void
  Description: Unlock gui controls (global state)
  No input parameters
Function 005: GuiIsLocked() (0 input parameters)
  Name: GuiIsLocked
  Return type: bool
  Description: Check if gui is locked (global state)
  No input parameters
Function 006: GuiSetAlpha() (1 input parameters)
  Name: GuiSetAlpha
  Return type: void
  Description: Set gui controls alpha (global state), alpha goes from 0.0f to 1.0f
  Param[1]: alpha (type: float)
Function 007: GuiSetState() (1 input parameters)
  Name: GuiSetState
  Return type: void
  Description: Set gui state (global state)
  Param[1]: state (type: int)
Function 008: GuiGetState() (0 input parameters)
  Name: GuiGetState
  Return type: int
  Description: Get gui state (global state)
  No input parameters
Function 009: GuiSetFont() (1 input parameters)
  Name: GuiSetFont
  Return type: void
  Description: Set gui custom font (global state)
  Param[1]: font (type: Font)
Function 010: GuiGetFont() (0 input parameters)
  Name: GuiGetFont
  Return type: Font
  Description: Get gui custom font (global state)
  No input parameters
Function 011: GuiSetStyle() (3 input parameters)
  Name: GuiSetStyle
  Return type: void
  Description: Set one style property
  Param[1]: control (type: int)
  Param[2]: property (type: int)
  Param[3]: value (type: int)
Function 012: GuiGetStyle() (2 input parameters)
  Name: GuiGetStyle
  Return type: int
  Description: Get one style property
  Param[1]: control (type: int)
  Param[2]: property (type: int)
Function 013: GuiLoadStyle() (1 input parameters)
  Name: GuiLoadStyle
  Return type: void
  Description: Load style file over global style variable (.rgs)
  Param[1]: fileName (type: const char *)
Function 014: GuiLoadStyleDefault() (0 input parameters)
  Name: GuiLoadStyleDefault
  Return type: void
  Description: Load style default over global style
  No input parameters
Function 015: GuiEnableTooltip() (0 input parameters)
  Name: GuiEnableTooltip
  Return type: void
  Description: Enable gui tooltips (global state)
  No input parameters
Function 016: GuiDisableTooltip() (0 input parameters)
  Name: GuiDisableTooltip
  Return type: void
  Description: Disable gui tooltips (global state)
  No input parameters
Function 017: GuiSetTooltip() (1 input parameters)
  Name: GuiSetTooltip
  Return type: void
  Description: Set tooltip string
  Param[1]: tooltip (type: const char *)
Function 018: GuiIconText() (2 input parameters)
  Name: GuiIconText
  Return type: const char *
  Description: Get text with icon id prepended (if supported)
  Param[1]: iconId (type: int)
  Param[2]: text (type: const char *)
Function 019: GuiSetIconScale() (1 input parameters)
  Name: GuiSetIconScale
  Return type: void
  Description: Set default icon drawing size
  Param[1]: scale (type: int)
Function 020: GuiGetIcons() (0 input parameters)
  Name: GuiGetIcons
  Return type: unsigned int *
  Description: Get raygui icons data pointer
  No input parameters
Function 021: GuiLoadIcons() (2 input parameters)
  Name: GuiLoadIcons
  Return type: char **
  Description: Load raygui icons file (.rgi) into internal icons data
  Param[1]: fileName (type: const char *)
  Param[2]: loadIconsName (type: bool)
Function 022: GuiDrawIcon() (5 input parameters)
  Name: GuiDrawIcon
  Return type: void
  Description: Draw icon using pixel size at specified position
  Param[1]: iconId (type: int)
  Param[2]: posX (type: int)
  Param[3]: posY (type: int)
  Param[4]: pixelSize (type: int)
  Param[5]: color (type: Color)
Function 023: GuiWindowBox() (2 input parameters)
  Name: GuiWindowBox
  Return type: int
  Description: Window Box control, shows a window that can be closed
  Param[1]: bounds (type: Rectangle)
  Param[2]: title (type: const char *)
Function 024: GuiGroupBox() (2 input parameters)
  Name: GuiGroupBox
  Return type: int
  Description: Group Box control with text name
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: const char *)
Function 025: GuiLine() (2 input parameters)
  Name: GuiLine
  Return type: int
  Description: Line separator control, could contain text
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: const char *)
Function 026: GuiPanel() (2 input parameters)
  Name: GuiPanel
  Return type: int
  Description: Panel control, useful to group controls
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: const char *)
Function 027: GuiTabBar() (4 input parameters)
  Name: GuiTabBar
  Return type: int
  Description: Tab Bar control, returns TAB to be closed or -1
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: const char **)
  Param[3]: count (type: int)
  Param[4]: active (type: int *)
Function 028: GuiScrollPanel() (5 input parameters)
  Name: GuiScrollPanel
  Return type: int
  Description: Scroll Panel control
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: const char *)
  Param[3]: content (type: Rectangle)
  Param[4]: scroll (type: Vector2 *)
  Param[5]: view (type: Rectangle *)
Function 029: GuiLabel() (2 input parameters)
  Name: GuiLabel
  Return type: int
  Description: Label control, shows text
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: const char *)
Function 030: GuiButton() (2 input parameters)
  Name: GuiButton
  Return type: int
  Description: Button control, returns true when clicked
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: const char *)
Function 031: GuiLabelButton() (2 input parameters)
  Name: GuiLabelButton
  Return type: int
  Description: Label button control, show true when clicked
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: const char *)
Function 032: GuiToggle() (3 input parameters)
  Name: GuiToggle
  Return type: int
  Description: Toggle Button control, returns true when active
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: const char *)
  Param[3]: active (type: bool *)
Function 033: GuiToggleGroup() (3 input parameters)
  Name: GuiToggleGroup
  Return type: int
  Description: Toggle Group control, returns active toggle index
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: const char *)
  Param[3]: active (type: int *)
Function 034: GuiToggleSlider() (3 input parameters)
  Name: GuiToggleSlider
  Return type: int
  Description: Toggle Slider control, returns true when clicked
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: const char *)
  Param[3]: active (type: int *)
Function 035: GuiCheckBox() (3 input parameters)
  Name: GuiCheckBox
  Return type: int
  Description: Check Box control, returns true when active
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: const char *)
  Param[3]: checked (type: bool *)
Function 036: GuiComboBox() (3 input parameters)
  Name: GuiComboBox
  Return type: int
  Description: Combo Box control, returns selected item index
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: const char *)
  Param[3]: active (type: int *)
Function 037: GuiDropdownBox() (4 input parameters)
  Name: GuiDropdownBox
  Return type: int
  Description: Dropdown Box control, returns selected item
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: const char *)
  Param[3]: active (type: int *)
  Param[4]: editMode (type: bool)
Function 038: GuiSpinner() (6 input parameters)
  Name: GuiSpinner
  Return type: int
  Description: Spinner control, returns selected value
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: const char *)
  Param[3]: value (type: int *)
  Param[4]: minValue (type: int)
  Param[5]: maxValue (type: int)
  Param[6]: editMode (type: bool)
Function 039: GuiValueBox() (6 input parameters)
  Name: GuiValueBox
  Return type: int
  Description: Value Box control, updates input text with numbers
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: const char *)
  Param[3]: value (type: int *)
  Param[4]: minValue (type: int)
  Param[5]: maxValue (type: int)
  Param[6]: editMode (type: bool)
Function 040: GuiTextBox() (4 input parameters)
  Name: GuiTextBox
  Return type: int
  Description: Text Box control, updates input text
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: char *)
  Param[3]: textSize (type: int)
  Param[4]: editMode (type: bool)
Function 041: GuiSlider() (6 input parameters)
  Name: GuiSlider
  Return type: int
  Description: Slider control, returns selected value
  Param[1]: bounds (type: Rectangle)
  Param[2]: textLeft (type: const char *)
  Param[3]: textRight (type: const char *)
  Param[4]: value (type: float *)
  Param[5]: minValue (type: float)
  Param[6]: maxValue (type: float)
Function 042: GuiSliderBar() (6 input parameters)
  Name: GuiSliderBar
  Return type: int
  Description: Slider Bar control, returns selected value
  Param[1]: bounds (type: Rectangle)
  Param[2]: textLeft (type: const char *)
  Param[3]: textRight (type: const char *)
  Param[4]: value (type: float *)
  Param[5]: minValue (type: float)
  Param[6]: maxValue (type: float)
Function 043: GuiProgressBar() (6 input parameters)
  Name: GuiProgressBar
  Return type: int
  Description: Progress Bar control, shows current progress value
  Param[1]: bounds (type: Rectangle)
  Param[2]: textLeft (type: const char *)
  Param[3]: textRight (type: const char *)
  Param[4]: value (type: float *)
  Param[5]: minValue (type: float)
  Param[6]: maxValue (type: float)
Function 044: GuiStatusBar() (2 input parameters)
  Name: GuiStatusBar
  Return type: int
  Description: Status Bar control, shows info text
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: const char *)
Function 045: GuiDummyRec() (2 input parameters)
  Name: GuiDummyRec
  Return type: int
  Description: Dummy control for placeholders
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: const char *)
Function 046: GuiGrid() (5 input parameters)
  Name: GuiGrid
  Return type: int
  Description: Grid control, returns mouse cell position
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: const char *)
  Param[3]: spacing (type: float)
  Param[4]: subdivs (type: int)
  Param[5]: mouseCell (type: Vector2 *)
Function 047: GuiListView() (4 input parameters)
  Name: GuiListView
  Return type: int
  Description: List View control, returns selected list item index
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: const char *)
  Param[3]: scrollIndex (type: int *)
  Param[4]: active (type: int *)
Function 048: GuiListViewEx() (6 input parameters)
  Name: GuiListViewEx
  Return type: int
  Description: List View with extended parameters
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: const char **)
  Param[3]: count (type: int)
  Param[4]: scrollIndex (type: int *)
  Param[5]: active (type: int *)
  Param[6]: focus (type: int *)
Function 049: GuiMessageBox() (4 input parameters)
  Name: GuiMessageBox
  Return type: int
  Description: Message Box control, displays a message
  Param[1]: bounds (type: Rectangle)
  Param[2]: title (type: const char *)
  Param[3]: message (type: const char *)
  Param[4]: buttons (type: const char *)
Function 050: GuiTextInputBox() (7 input parameters)
  Name: GuiTextInputBox
  Return type: int
  Description: Text Input Box control, ask for text, supports secret
  Param[1]: bounds (type: Rectangle)
  Param[2]: title (type: const char *)
  Param[3]: message (type: const char *)
  Param[4]: buttons (type: const char *)
  Param[5]: text (type: char *)
  Param[6]: textMaxSize (type: int)
  Param[7]: secretViewActive (type: bool *)
Function 051: GuiColorPicker() (3 input parameters)
  Name: GuiColorPicker
  Return type: int
  Description: Color Picker control (multiple color controls)
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: const char *)
  Param[3]: color (type: Color *)
Function 052: GuiColorPanel() (3 input parameters)
  Name: GuiColorPanel
  Return type: int
  Description: Color Panel control
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: const char *)
  Param[3]: color (type: Color *)
Function 053: GuiColorBarAlpha() (3 input parameters)
  Name: GuiColorBarAlpha
  Return type: int
  Description: Color Bar Alpha control
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: const char *)
  Param[3]: alpha (type: float *)
Function 054: GuiColorBarHue() (3 input parameters)
  Name: GuiColorBarHue
  Return type: int
  Description: Color Bar Hue control
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: const char *)
  Param[3]: value (type: float *)
Function 055: GuiColorPickerHSV() (3 input parameters)
  Name: GuiColorPickerHSV
  Return type: int
  Description: Color Picker control that avoids conversion to RGB on each call (multiple color controls)
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: const char *)
  Param[3]: colorHsv (type: Vector3 *)
Function 056: GuiColorPanelHSV() (3 input parameters)
  Name: GuiColorPanelHSV
  Return type: int
  Description: Color Panel control that returns HSV color value, used by GuiColorPickerHSV()
  Param[1]: bounds (type: Rectangle)
  Param[2]: text (type: const char *)
  Param[3]: colorHsv (type: Vector3 *)
