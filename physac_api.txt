
Defines found: 14

Define 001: PHYSAC_H
  Name: PHYSAC_H
  Type: GUARD
  Value: 
  Description: 
Define 002: PHYSACDEF
  Name: PHYSACDEF
  Type: UNKNOWN
  Value: 
  Description: We are building or using physac as a static library
Define 003: PHYSAC_MALLOC(size)
  Name: PHYSAC_MALLOC(size)
  Type: MACRO
  Value: malloc(size)
  Description: 
Define 004: PHYSAC_CALLOC(size, n)
  Name: PHYSAC_CALLOC(size, n)
  Type: MACRO
  Value: calloc(size, n)
  Description: 
Define 005: PHYSAC_FREE(ptr)
  Name: PHYSAC_FREE(ptr)
  Type: MACRO
  Value: free(ptr)
  Description: 
Define 006: PHYSAC_MAX_BODIES
  Name: PHYSAC_MAX_BODIES
  Type: INT
  Value: 64
  Description: Maximum number of physic bodies supported
Define 007: PHYSAC_MAX_MANIFOLDS
  Name: PHYSAC_MAX_MANIFOLDS
  Type: INT
  Value: 4096
  Description: Maximum number of physic bodies interactions (64x64)
Define 008: PHYSAC_MAX_VERTICES
  Name: PHYSAC_MAX_VERTICES
  Type: INT
  Value: 24
  Description: Maximum number of vertex for polygons shapes
Define 009: PHYSAC_DEFAULT_CIRCLE_VERTICES
  Name: PHYSAC_DEFAULT_CIRCLE_VERTICES
  Type: INT
  Value: 24
  Description: Default number of vertices for circle shapes
Define 010: PHYSAC_COLLISION_ITERATIONS
  Name: PHYSAC_COLLISION_ITERATIONS
  Type: INT
  Value: 100
  Description: 
Define 011: PHYSAC_PENETRATION_ALLOWANCE
  Name: PHYSAC_PENETRATION_ALLOWANCE
  Type: FLOAT
  Value: 0.05
  Description: 
Define 012: PHYSAC_PENETRATION_CORRECTION
  Name: PHYSAC_PENETRATION_CORRECTION
  Type: FLOAT
  Value: 0.4
  Description: 
Define 013: PHYSAC_PI
  Name: PHYSAC_PI
  Type: FLOAT
  Value: 3.14159265358979323846
  Description: 
Define 014: PHYSAC_DEG2RAD
  Name: PHYSAC_DEG2RAD
  Type: FLOAT_MATH
  Value: (PHYSAC_PI/180.0f)
  Description: 

Structures found: 6

Struct 01: Vector2 (2 fields)
  Name: Vector2
  Description: Vector2 type
  Field[1]: float x 
  Field[2]: float y 
Struct 02: Matrix2x2 (4 fields)
  Name: Matrix2x2
  Description: Matrix2x2 type (used for polygon shape rotation matrix)
  Field[1]: float m00 
  Field[2]: float m01 
  Field[3]: float m10 
  Field[4]: float m11 
Struct 03: PhysicsVertexData (3 fields)
  Name: PhysicsVertexData
  Description: 
  Field[1]: unsigned int vertexCount // Vertex count (positions and normals)
  Field[2]: Vector2[PHYSAC_MAX_VERTICES] positions // Vertex positions vectors
  Field[3]: Vector2[PHYSAC_MAX_VERTICES] normals // Vertex normals vectors
Struct 04: PhysicsShape (5 fields)
  Name: PhysicsShape
  Description: 
  Field[1]: PhysicsShapeType type // Shape type (circle or polygon)
  Field[2]: PhysicsBody body // Shape physics body data pointer
  Field[3]: PhysicsVertexData vertexData // Shape vertices data (used for polygon shapes)
  Field[4]: float radius // Shape radius (used for circle shapes)
  Field[5]: Matrix2x2 transform // Vertices transform matrix 2x2
Struct 05: PhysicsBodyData (19 fields)
  Name: PhysicsBodyData
  Description: 
  Field[1]: unsigned int id // Unique identifier
  Field[2]: bool enabled // Enabled dynamics state (collisions are calculated anyway)
  Field[3]: Vector2 position // Physics body shape pivot
  Field[4]: Vector2 velocity // Current linear velocity applied to position
  Field[5]: Vector2 force // Current linear force (reset to 0 every step)
  Field[6]: float angularVelocity // Current angular velocity applied to orient
  Field[7]: float torque // Current angular force (reset to 0 every step)
  Field[8]: float orient // Rotation in radians
  Field[9]: float inertia // Moment of inertia
  Field[10]: float inverseInertia // Inverse value of inertia
  Field[11]: float mass // Physics body mass
  Field[12]: float inverseMass // Inverse value of mass
  Field[13]: float staticFriction // Friction when the body has not movement (0 to 1)
  Field[14]: float dynamicFriction // Friction when the body has movement (0 to 1)
  Field[15]: float restitution // Restitution coefficient of the body (0 to 1)
  Field[16]: bool useGravity // Apply gravity force to dynamics
  Field[17]: bool isGrounded // Physics grounded on other body state
  Field[18]: bool freezeOrient // Physics rotation constraint
  Field[19]: PhysicsShape shape // Physics body shape information (type, radius, vertices, transform)
Struct 06: PhysicsManifoldData (10 fields)
  Name: PhysicsManifoldData
  Description: 
  Field[1]: unsigned int id // Unique identifier
  Field[2]: PhysicsBody bodyA // Manifold first physics body reference
  Field[3]: PhysicsBody bodyB // Manifold second physics body reference
  Field[4]: float penetration // Depth of penetration from collision
  Field[5]: Vector2 normal // Normal direction vector from 'a' to 'b'
  Field[6]: Vector2[2] contacts // Points of contact during collision
  Field[7]: unsigned int contactsCount // Current collision number of contacts
  Field[8]: float restitution // Mixed restitution during collision
  Field[9]: float dynamicFriction // Mixed dynamic friction during collision
  Field[10]: float staticFriction // Mixed static friction during collision

Aliases found: 0


Enums found: 0


Callbacks found: 0


Functions found: 19

Function 001: InitPhysics() (0 input parameters)
  Name: InitPhysics
  Return type: void
  Description: Initializes physics system
  No input parameters
Function 002: UpdatePhysics() (0 input parameters)
  Name: UpdatePhysics
  Return type: void
  Description: Update physics system
  No input parameters
Function 003: ResetPhysics() (0 input parameters)
  Name: ResetPhysics
  Return type: void
  Description: Reset physics system (global variables)
  No input parameters
Function 004: ClosePhysics() (0 input parameters)
  Name: ClosePhysics
  Return type: void
  Description: Close physics system and unload used memory
  No input parameters
Function 005: SetPhysicsTimeStep() (1 input parameters)
  Name: SetPhysicsTimeStep
  Return type: void
  Description: Sets physics fixed time step in milliseconds. 1.666666 by default
  Param[1]: delta (type: double)
Function 006: SetPhysicsGravity() (2 input parameters)
  Name: SetPhysicsGravity
  Return type: void
  Description: Sets physics global gravity force
  Param[1]: x (type: float)
  Param[2]: y (type: float)
Function 007: CreatePhysicsBodyCircle() (3 input parameters)
  Name: CreatePhysicsBodyCircle
  Return type: PhysicsBody
  Description: Creates a new circle physics body with generic parameters
  Param[1]: pos (type: Vector2)
  Param[2]: radius (type: float)
  Param[3]: density (type: float)
Function 008: CreatePhysicsBodyRectangle() (4 input parameters)
  Name: CreatePhysicsBodyRectangle
  Return type: PhysicsBody
  Description: Creates a new rectangle physics body with generic parameters
  Param[1]: pos (type: Vector2)
  Param[2]: width (type: float)
  Param[3]: height (type: float)
  Param[4]: density (type: float)
Function 009: CreatePhysicsBodyPolygon() (4 input parameters)
  Name: CreatePhysicsBodyPolygon
  Return type: PhysicsBody
  Description: Creates a new polygon physics body with generic parameters
  Param[1]: pos (type: Vector2)
  Param[2]: radius (type: float)
  Param[3]: sides (type: int)
  Param[4]: density (type: float)
Function 010: DestroyPhysicsBody() (1 input parameters)
  Name: DestroyPhysicsBody
  Return type: void
  Description: Destroy a physics body
  Param[1]: body (type: PhysicsBody)
Function 011: PhysicsAddForce() (2 input parameters)
  Name: PhysicsAddForce
  Return type: void
  Description: Adds a force to a physics body
  Param[1]: body (type: PhysicsBody)
  Param[2]: force (type: Vector2)
Function 012: PhysicsAddTorque() (2 input parameters)
  Name: PhysicsAddTorque
  Return type: void
  Description: Adds an angular force to a physics body
  Param[1]: body (type: PhysicsBody)
  Param[2]: amount (type: float)
Function 013: PhysicsShatter() (3 input parameters)
  Name: PhysicsShatter
  Return type: void
  Description: Shatters a polygon shape physics body to little physics bodies with explosion force
  Param[1]: body (type: PhysicsBody)
  Param[2]: position (type: Vector2)
  Param[3]: force (type: float)
Function 014: SetPhysicsBodyRotation() (2 input parameters)
  Name: SetPhysicsBodyRotation
  Return type: void
  Description: Sets physics body shape transform based on radians parameter
  Param[1]: body (type: PhysicsBody)
  Param[2]: radians (type: float)
Function 015: GetPhysicsBody() (1 input parameters)
  Name: GetPhysicsBody
  Return type: PhysicsBody
  Description: Returns a physics body of the bodies pool at a specific index
  Param[1]: index (type: int)
Function 016: GetPhysicsBodiesCount() (0 input parameters)
  Name: GetPhysicsBodiesCount
  Return type: int
  Description: Returns the current amount of created physics bodies
  No input parameters
Function 017: GetPhysicsShapeType() (1 input parameters)
  Name: GetPhysicsShapeType
  Return type: int
  Description: Returns the physics body shape type (PHYSICS_CIRCLE or PHYSICS_POLYGON)
  Param[1]: index (type: int)
Function 018: GetPhysicsShapeVerticesCount() (1 input parameters)
  Name: GetPhysicsShapeVerticesCount
  Return type: int
  Description: Returns the amount of vertices of a physics body shape
  Param[1]: index (type: int)
Function 019: GetPhysicsShapeVertex() (2 input parameters)
  Name: GetPhysicsShapeVertex
  Return type: Vector2
  Description: Returns transformed position of a body shape (body position + vertex transformed position)
  Param[1]: body (type: PhysicsBody)
  Param[2]: vertex (type: int)
